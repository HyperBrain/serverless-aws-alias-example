service: sls-test-project

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: us-east-1

  memorySize: 512
  timeout: 15

  iamRoleStatements:
    - Effect: Allow # access to API Gateway
      Action:
        - execute-api:Invoke
      Resource:
        # Allow access to our own APIs
        - 'Fn::Join':
          - ':'
          -
            - arn:aws:execute-api
            - Ref: 'AWS::Region'
            - Ref: 'AWS::AccountId'
            - 'Fn::Join':
              - '/'
              -
                - Ref: ApiGatewayRestApi
                - '*/*/*'
    - Effect: Allow
      # access to DynamoDB
      Action:
        - dynamodb:*
      Resource:
        - 'Fn::Join':
          - '/'
          -
            - 'Fn::Join':
              - ':'
              -
                - arn:aws:dynamodb
                - Ref: 'AWS::Region'
                - Ref: 'AWS::AccountId'
                - table
            - Ref: TestDynamoDbTable

  stackTags: # Optional CF stack tags
    environment: ${opt:stage, self:provider.stage}
    application: ${self:service}
    product: something

  environment:
    SERVERLESS_PROJECT_NAME: ${self:service} # FIXME Required for Sessions
    SERVERLESS_PROJECT: ${self:service}
    SERVERLESS_STAGE: ${self:custom.stage}
    SERVERLESS_REGION: ${self:custom.region}
    # Auth
    TEST_TABLE_NAME:
      Ref: TestDynamoDbTable

plugins:
  - serverless-offline
  - serverless-webpack
  - serverless-plugin-warmup
  - serverless-aws-alias

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}

  # Stage dependent variables.
  # Usage: ${self:custom.${self:custom.stage}.<varname>}
  dev:
    testvar: test-${self:custom.stage}

  prod:
    testvar: test-${self:custom.stage}

  webpack: ./webpack.lambda.config.js
  webpackIncludeModules: true

functions:
  testfct1:
    description: 'Echo function echoes alias'
    handler: handlers/testfct1/handler.handle
    warmup: true
    events:
      - http:
          method: GET
          path: /func1

resources:
  Resources:

  Outputs:
